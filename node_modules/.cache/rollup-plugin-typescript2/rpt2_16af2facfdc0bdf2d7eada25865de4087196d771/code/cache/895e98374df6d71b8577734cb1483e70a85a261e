{"code":"import { isObject } from \"@vue/shared\";\r\nimport { mutableHandler } from \"./baseHandlers\";\r\nexport function reactive(target) {\r\n    return createReactiveObject(target, mutableHandler);\r\n}\r\n/**\r\n *\r\n * @param target 创建代理的目标\r\n * @param baseHandler 针对不同的方式创建不同的代理对象\r\n */\r\n// weakMap(key只能是对象) map(key可以是其他类型)\r\nvar reactiveMap = new WeakMap(); // 目的是添加缓存\r\nfunction createReactiveObject(target, baseHandler) {\r\n    if (!isObject(target)) {\r\n        return target;\r\n    }\r\n    var existProxy = reactiveMap.get(target);\r\n    if (existProxy) {\r\n        return existProxy; // 如果已经代理过了，那就直接把上次的代理返回就可以的 \r\n    }\r\n    // 如果是对象 就做一个代理 new proxy\r\n    var proxy = new Proxy(target, baseHandler);\r\n    reactiveMap.set(target, proxy);\r\n    return proxy;\r\n}\r\n//# sourceMappingURL=reactive.js.map","references":["C:/Users/86159/Desktop/github/myVue3/packages/shared/src/index.ts","C:/Users/86159/Desktop/github/myVue3/packages/reactive/src/baseHandlers.ts"],"map":"{\"version\":3,\"file\":\"reactive.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../packages/reactive/src/reactive.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACvC,OAAO,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAC;AAEhD,MAAM,UAAU,QAAQ,CAAC,MAAM;IAC3B,OAAO,oBAAoB,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;AACxD,CAAC;AAED;;;;GAIG;AACH,oCAAoC;AACpC,IAAM,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC,CAAC,UAAU;AAC7C,SAAS,oBAAoB,CAAC,MAAM,EAAE,WAAW;IAC7C,IAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;QACjB,OAAO,MAAM,CAAC;KACjB;IACD,IAAM,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC3C,IAAG,UAAU,EAAC;QACV,OAAO,UAAU,CAAC,CAAA,6BAA6B;KAClD;IACD,yBAAyB;IACzB,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,EAAC,WAAW,CAAC,CAAC;IAC5C,WAAW,CAAC,GAAG,CAAC,MAAM,EAAC,KAAK,CAAC,CAAC;IAC9B,OAAO,KAAK,CAAC;AACjB,CAAC\"}"}
